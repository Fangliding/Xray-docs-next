import{r as n,o as a,c as s,a as e,b as t,w as o,F as p,e as r,d as i}from"./app.7ace5932.js";const l={},c=e("h1",{id:"api-interface",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#api-interface","aria-hidden":"true"},"#"),r(" API Interface")],-1),u=r("API interface configuration provides a set of APIs based on "),d={href:"https://grpc.io/",target:"_blank",rel:"noopener noreferrer"},b=r("gRPC"),h=r(" for remote invocation."),g=r("The interface can be enabled through the api configuration module. When the api configuration is enabled, Xray will create an outbound proxy automatically. All incoming API connections need to be manually routed to this outbound proxy through "),k=r("routing rule configuration"),m=r("."),f=i('<p>Please refer to the <a href="#related-configuration">related configuration</a> in this section.</p><div class="custom-container warning"><p class="custom-container-title">Warning</p><p>Most users do not need to use this API. Novices can ignore this item directly.</p></div><h2 id="apiobject" tabindex="-1"><a class="header-anchor" href="#apiobject" aria-hidden="true">#</a> ApiObject</h2><p><code>ApiObject</code> corresponds to the <code>api</code> item in the configuration file.</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;api&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;api&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;services&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;HandlerService&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;LoggerService&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;StatsService&quot;</span><span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><blockquote><p><code>tag</code>: string</p></blockquote><p>Outbound proxy identifier.</p><blockquote><p><code>services</code>: [string]</p></blockquote><p>List of enabled APIs, optional values can be found in <a href="#supported-api-list">Supported API List</a>.</p><h2 id="related-configuration" tabindex="-1"><a class="header-anchor" href="#related-configuration" aria-hidden="true">#</a> Related Configuration</h2><p>An api inbound can be added to the inbounds configuration.</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token property">&quot;inbounds&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    <span class="token property">&quot;listen&quot;</span><span class="token operator">:</span> <span class="token string">&quot;127.0.0.1&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;port&quot;</span><span class="token operator">:</span> <span class="token number">10085</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;protocol&quot;</span><span class="token operator">:</span> <span class="token string">&quot;dokodemo-door&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;settings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token property">&quot;address&quot;</span><span class="token operator">:</span> <span class="token string">&quot;127.0.0.1&quot;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;api&quot;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>Add routing rules for the api inbound in the routing configuration.</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token property">&quot;routing&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n  <span class="token property">&quot;rules&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token property">&quot;inboundTag&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token string">&quot;api&quot;</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;outboundTag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;api&quot;</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;field&quot;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="supported-api-list" tabindex="-1"><a class="header-anchor" href="#supported-api-list" aria-hidden="true">#</a> Supported API List</h2><h3 id="handlerservice" tabindex="-1"><a class="header-anchor" href="#handlerservice" aria-hidden="true">#</a> HandlerService</h3><p>APIs that modify the inbound and outbound proxies, with the following available functions:</p><ul><li>Add a new inbound proxy;</li><li>Add a new outbound proxy;</li><li>Delete an existing inbound proxy;</li><li>Delete an existing outbound proxy;</li><li>Add a user to an inbound proxy (VMess, VLESS, Trojan, and Shadowsocks(v1.3.0+) only);</li><li>Delete a user from an inbound proxy (VMess, VLESS, Trojan, and Shadowsocks(v1.3.0+) only);</li></ul><h3 id="loggerservice" tabindex="-1"><a class="header-anchor" href="#loggerservice" aria-hidden="true">#</a> LoggerService</h3><p>Supports restarting the built-in logger, which can be used in conjunction with logrotate to perform operations on log files.</p><h3 id="statsservice" tabindex="-1"><a class="header-anchor" href="#statsservice" aria-hidden="true">#</a> StatsService</h3>',21),q=r("Built-in data statistics service, see "),v=r("Statistics Information"),y=r(" for details."),x=i('<h3 id="reflectionservice" tabindex="-1"><a class="header-anchor" href="#reflectionservice" aria-hidden="true">#</a> ReflectionService</h3><p>Supports gRPC clients to obtain the list of APIs from the server.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ grpcurl -plaintext localhost:10085 list\ngrpc.reflection.v1alpha.ServerReflection\nv2ray.core.app.proxyman.command.HandlerService\nv2ray.core.app.stats.command.StatsService\nxray.app.proxyman.command.HandlerService\nxray.app.stats.command.StatsService\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="api-calling-example" tabindex="-1"><a class="header-anchor" href="#api-calling-example" aria-hidden="true">#</a> API Calling Example</h2>',4),S={href:"https://github.com/XTLS/Xray-API-documents",target:"_blank",rel:"noopener noreferrer"},A=r("Xray-API-documents"),j=r(" @crossfw");l.render=function(r,i){const l=n("OutboundLink"),P=n("RouterLink");return a(),s(p,null,[c,e("p",null,[u,e("a",d,[b,t(l)]),h]),e("p",null,[g,t(P,{to:"/en/config/routing.html"},{default:o((()=>[k])),_:1}),m]),f,e("p",null,[q,t(P,{to:"/en/config/stats.html"},{default:o((()=>[v])),_:1}),y]),x,e("p",null,[e("a",S,[A,t(l)]),j])],64)};export default l;
