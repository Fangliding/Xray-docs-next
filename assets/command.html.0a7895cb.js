import{r as e,o as a,c as n,a as s,b as r,w as i,F as l,d as t,e as c}from"./app.b5341eb9.js";const p={},d=t('<h1 id="命令参数" tabindex="-1"><a class="header-anchor" href="#命令参数" aria-hidden="true">#</a> 命令参数</h1><div class="custom-container tip"><p class="custom-container-title">提示</p><p>Xray 使用 Go 风格的命令及参数</p></div><h2 id="获取基本命令" tabindex="-1"><a class="header-anchor" href="#获取基本命令" aria-hidden="true">#</a> 获取基本命令</h2><p>您可以运行 <code>xray help</code> 来获得所有 xray 最基础的用法, 以及可用的命令及说明.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Xray is a platform for building proxies.\n\nUsage:\n\n        xray &lt;command&gt; [arguments]\n\nThe commands are:\n\n        run          Run Xray with config, the default command\n        version      Show current version of Xray\n        api          Call an API in an Xray process\n        tls          TLS tools\n        uuid         Generate UUIDv4 or UUIDv5\n        x25519       Generate key pair for x25519 key exchange\n        wg           Generate key pair for wireguard key exchange\n\nUse &quot;xray help &lt;command&gt;&quot; for more information about a command.\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h3 id="xray-run" tabindex="-1"><a class="header-anchor" href="#xray-run" aria-hidden="true">#</a> xray run</h3><p>指定一个或多个配置文件，并运行。</p><p>使用方法:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code> xray run [-c config.json] [-confdir dir]\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Run Xray with config, the default command.\n\nThe -config=file, -c=file flags set the config files for\nXray. Multiple assign is accepted.\n\nThe -confdir=dir flag sets a dir with multiple json config\n\nThe -format=json flag sets the format of config files.\nDefault &quot;auto&quot;.\n\nThe -test flag tells Xray to test config files only,\nwithout launching the server\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">提示</p><p>配置文件除了默认的 JSON 格式外，也可以使用 TOML 和 YAML。在不指定格式的前提下会通过文件扩展名识别。</p></div><h3 id="xray-version" tabindex="-1"><a class="header-anchor" href="#xray-version" aria-hidden="true">#</a> xray version</h3><p>输出 Xray 版本、 Golang 版本等信息。</p><p>使用方法:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code> xray version\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="xray-api" tabindex="-1"><a class="header-anchor" href="#xray-api" aria-hidden="true">#</a> xray api</h3><p>调用 Xray 的 gRPC API，需要在配置文件中开启。</p><p>使用方法:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>xray api &lt;command&gt; [arguments]\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>        restartlogger Restart the logger\n        stats         Get statistics\n        statsquery    Query statistics\n        statssys      Get system statistics\n        adi           Add inbounds\n        ado           Add outbounds\n        rmi           Remove inbounds\n        rmo           Remove outbounds\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="xray-tls" tabindex="-1"><a class="header-anchor" href="#xray-tls" aria-hidden="true">#</a> xray tls</h3><p>一些与 TLS 相关的工具。</p><p>使用方法:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>xray tls &lt;command&gt; [arguments]\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>        cert          Generate TLS certificates\n        ping          Ping the domain with TLS handshake\n        certChainHash Calculate TLS certificates hash.\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="xray-uuid" tabindex="-1"><a class="header-anchor" href="#xray-uuid" aria-hidden="true">#</a> xray uuid</h3><p>生成 UUID。</p><p>使用方法:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>xray uuid [-i &quot;example&quot;]\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="xray-x25519" tabindex="-1"><a class="header-anchor" href="#xray-x25519" aria-hidden="true">#</a> xray x25519</h3><p>生成 x25519 密钥对。</p><p>使用方法:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>xray x25519 [-i &quot;(base64.RawURLEncoding)&quot; --std-encoding ]\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="xray-wg" tabindex="-1"><a class="header-anchor" href="#xray-wg" aria-hidden="true">#</a> xray wg</h3><p>生成 wireguard curve25519 密钥对。</p><p>使用方法:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>xray wg [-i &quot;(base64.StdEncoding)&quot;]\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',37),u={class:"custom-container tip"},o=s("p",{class:"custom-container-title"},"提示",-1),b=s("p",null,[c("当 "),s("code",null,"-config"),c(" 没有指定时，Xray 将先后尝试从以下路径加载 "),s("code",null,"config.json"),c(" :")],-1),m=s("li",null,"工作目录（Working Directory）",-1),x=c("环境变量"),g=c("中 "),h=s("code",null,"Xray.location.asset",-1),v=c(" 所指定的路径");p.render=function(t,c){const p=e("RouterLink");return a(),n(l,null,[d,s("div",u,[o,b,s("ul",null,[m,s("li",null,[r(p,{to:"/config/features/env.html#%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6%E8%B7%AF%E5%BE%84"},{default:i((()=>[x])),_:1}),g,h,v])])])],64)};export default p;
