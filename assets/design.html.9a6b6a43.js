import{r,o as a,c as e,a as l,b as n,w as u,F as i,e as o}from"./app.141d040a.js";const t={},d=l("h1",{id:"设计目标",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#设计目标","aria-hidden":"true"},"#"),o(" 设计目标")],-1),h=l("ul",null,[l("li",null,"Xray 内核提供了一个平台，支持必要的网络代理功能，在其之上可以进二次开发，以提供更好的用户体验；"),l("li",null,"以跨平台为首要原则，以减少二次开发的成本；")],-1),s=l("h2",{id:"架构",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#架构","aria-hidden":"true"},"#"),o(" 架构")],-1),c=l("p",null,[l("img",{src:"/Xray-docs-next/assets/framework.fb23d2b0.png",alt:"Architecture"})],-1),p=l("p",null,"内核分为三层：应用层、代理层和传输层。",-1),b=l("p",null,"每一层内包含数个模块，模块间互相独立，同类型的模块可无缝替换。",-1),x=l("h3",{id:"应用层",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#应用层","aria-hidden":"true"},"#"),o(" 应用层")],-1),f=l("p",null,"应用层包含一些代理层中常用的功能，这些功能被抽象出来，以便在不同的代理模块中复用。",-1),y=l("p",null,"应用层的模块应为纯软件实现，与硬件或平台相关的技术无关。",-1),g=l("p",null,"重要模块列表：",-1),m=l("li",null,"Dispatcher: 用于把入站代理所接收到的数据，传送给出站代理；",-1),k=o("Router: 路由模块，详见 "),X=o("路由配置"),D=o("；"),O=l("li",null,"DNS: 内置的 DNS 服务器模块；",-1),P=l("li",null,"Proxy Manager: 代理管理器；",-1),_=l("h3",{id:"代理层",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#代理层","aria-hidden":"true"},"#"),o(" 代理层")],-1),w=l("p",null,"代理层分为两部分：入站代理（Inbound Proxy）和出站代理（Outbound Proxy）。",-1),I=l("p",null,"两部分相互独立，入站代理不依赖于某个特定的出站代理，反之亦然。",-1),L=l("h4",{id:"入站代理",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#入站代理","aria-hidden":"true"},"#"),o(" 入站代理")],-1),N=o("实现 "),R={href:"https://github.com/xtls/Xray-core/blob/main/proxy/proxy.go",target:"_blank",rel:"noopener noreferrer"},S=o("proxy.Inbound"),j=o(" 接口；"),A=l("h4",{id:"出站代理",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#出站代理","aria-hidden":"true"},"#"),o(" 出站代理")],-1),F=o("实现 "),M={href:"https://github.com/xtls/Xray-core/blob/main/proxy/proxy.go",target:"_blank",rel:"noopener noreferrer"},q=o("proxy.Outbound"),v=o(" 接口；"),z=l("h3",{id:"传输层",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#传输层","aria-hidden":"true"},"#"),o(" 传输层")],-1),B=l("p",null,"传输层提供一些网络数据传输相关的工具模块。",-1);t.render=function(o,t){const C=r("RouterLink"),E=r("OutboundLink");return a(),e(i,null,[d,h,s,c,p,b,x,f,y,g,l("ul",null,[m,l("li",null,[k,n(C,{to:"/config/routing.html"},{default:u((()=>[X])),_:1}),D]),O,P]),_,w,I,L,l("ul",null,[l("li",null,[N,l("a",R,[S,n(E)]),j])]),A,l("ul",null,[l("li",null,[F,l("a",M,[q,n(E)]),v])]),z,B],64)};export default t;
