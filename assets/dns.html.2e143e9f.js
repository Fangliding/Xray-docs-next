import{r as e,o as n,c as o,a as s,b as t,w as a,F as r,e as p,d as i}from"./app.f9f5aa77.js";const u={},d=s("h1",{id:"dns",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#dns","aria-hidden":"true"},"#"),p(" DNS")],-1),c=s("p",null,"DNS is an outbound protocol used for intercepting and forwarding DNS queries.",-1),l=s("p",null,"This outbound protocol can only handle DNS traffic, including queries based on UDP and TCP protocols. Other types of traffic will result in an error.",-1),b=p("When handling DNS queries, this outbound protocol will forward IP queries (A and AAAA) to the built-in "),q=p("DNS server"),h=p(". Other types of query traffic will be forwarded to their original destination addresses."),f=i('<h2 id="outboundconfigurationobject" tabindex="-1"><a class="header-anchor" href="#outboundconfigurationobject" aria-hidden="true">#</a> OutboundConfigurationObject</h2><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;network&quot;</span><span class="token operator">:</span> <span class="token string">&quot;tcp&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;address&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1.1.1.1&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;port&quot;</span><span class="token operator">:</span> <span class="token number">53</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;nonIPQuery&quot;</span><span class="token operator">:</span> <span class="token string">&quot;drop&quot;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><blockquote><p><code>network</code>: &quot;tcp&quot; | &quot;udp&quot;</p></blockquote><p>Modifies the transport layer protocol for DNS traffic. The possible values are <code>&quot;tcp&quot;</code> and <code>&quot;udp&quot;</code>. When not specified, the original transport method will be retained.</p><blockquote><p><code>address</code>: address</p></blockquote><p>Modifies the DNS server address. When not specified, the original address specified in the source will be retained.</p><blockquote><p><code>port</code>: number</p></blockquote><p>Modifies the DNS server port. When not specified, the original port specified in the source will be retained.</p><blockquote><p><code>nonIPQuery</code>: string</p></blockquote><p>Control non IP queries (neither A or AAAA), <code>&quot;drop&quot;</code> this request or <code>&quot;skip&quot;</code> processing in DNS moduleï¼Œthe request will be forwarded to target. By default is <code>&quot;drop&quot;</code>.</p>',10),k={id:"dns-configuration-example",tabindex:"-1"},g=s("a",{class:"header-anchor",href:"#dns-configuration-example","aria-hidden":"true"},"#",-1),m=p(" DNS Configuration Example ");u.render=function(p,i){const u=e("RouterLink"),w=e("Badge");return n(),o(r,null,[d,c,l,s("p",null,[b,t(u,{to:"/en/config/dns.html"},{default:a((()=>[q])),_:1}),h]),f,s("h2",k,[g,m,t(w,{text:"WIP",type:"warning"})])],64)};export default u;
