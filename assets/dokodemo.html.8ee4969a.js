import{r as e,o,c as n,a as t,b as a,w as s,F as r,d as p,e as c}from"./app.c4cd2a44.js";const l={},i=p('<h1 id="dokodemo-door" tabindex="-1"><a class="header-anchor" href="#dokodemo-door" aria-hidden="true">#</a> Dokodemo-Door</h1><p>Dokodemo door (Anywhere Door) can listen to a local port and forward all incoming data on this port to a specified server&#39;s port, achieving the effect of port mapping.</p><h2 id="inboundconfigurationobject" tabindex="-1"><a class="header-anchor" href="#inboundconfigurationobject" aria-hidden="true">#</a> InboundConfigurationObject</h2><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;address&quot;</span><span class="token operator">:</span> <span class="token string">&quot;8.8.8.8&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;port&quot;</span><span class="token operator">:</span> <span class="token number">53</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;network&quot;</span><span class="token operator">:</span> <span class="token string">&quot;tcp&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;timeout&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;followRedirect&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;userLevel&quot;</span><span class="token operator">:</span> <span class="token number">0</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><blockquote><p><code>address</code>: address</p></blockquote><p>The address to forward the traffic to. It can be an IP address like <code>&quot;1.2.3.4&quot;</code> or a domain name like <code>&quot;xray.com&quot;</code>. It is a string type.</p><p>When <code>followRedirect</code> (see below) is set to <code>true</code>, <code>address</code> can be empty.</p><blockquote><p><code>port</code>: number</p></blockquote><p>The specified port on the destination address to forward the traffic to. It should be in the range 1,655351,65535. It is a numeric value and is a required parameter.</p><blockquote><p><code>network</code>: &quot;tcp&quot; | &quot;udp&quot; | &quot;tcp,udp&quot;</p></blockquote><p>The supported network protocol type. For example, when specified as <code>&quot;tcp&quot;</code>, it will only receive TCP traffic. The default value is <code>&quot;tcp&quot;</code>.</p><blockquote><p><code>timeout</code>: number</p></blockquote><p>The idle timeout in seconds. The default value is <code>300</code>. When handling a connection, if no data is transmitted within the timeout period, the connection will be terminated.</p><blockquote><p><code>followRedirect</code>: true | false</p></blockquote><p>When set to <code>true</code>, dokodemo-door will recognize data forwarded by iptables and forward it to the corresponding destination address.</p>',15),u=c("Refer to the "),d=t("code",null,"tproxy",-1),h=c(" setting in the "),b=c("Transport Configuration"),f=c(" for more information."),m=t("blockquote",null,[t("p",null,[t("code",null,"userLevel"),c(": number")])],-1),k=c("The user level that the connection will use to determine the corresponding "),q=c("Local Policy"),g=c("."),y=c("The value of "),v=t("code",null,"userLevel",-1),w=c(" corresponds to the value of "),x=t("code",null,"level",-1),T=c(" in the "),j=c("policy"),I=c(". If not specified, the default value is 0."),P=t("h2",{id:"transparent-proxy-configuration-example",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#transparent-proxy-configuration-example","aria-hidden":"true"},"#"),c(" Transparent Proxy Configuration Example")],-1),C=t("p",null,[c("Please refer to the "),t("a",{href:"../../document/level-2/tproxy"},"Transparent Proxy (TProxy) Configuration Tutorial"),c(" for this section.")],-1);l.render=function(p,c){const l=e("RouterLink");return o(),n(r,null,[i,t("p",null,[u,d,h,a(l,{to:"/en/config/transport.html#sockoptobject"},{default:s((()=>[b])),_:1}),f]),m,t("p",null,[k,a(l,{to:"/en/config/policy.html#levelpolicyobject"},{default:s((()=>[q])),_:1}),g]),t("p",null,[y,v,w,x,T,a(l,{to:"/en/config/policy.html#policyobject"},{default:s((()=>[j])),_:1}),I]),P,C],64)};export default l;
