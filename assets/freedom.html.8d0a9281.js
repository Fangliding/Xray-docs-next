import{r as e,o as n,c as o,a as s,b as t,w as a,F as l,d as c,e as u}from"./app.6590e061.js";const p={},r=c('<h1 id="freedom" tabindex="-1"><a class="header-anchor" href="#freedom" aria-hidden="true">#</a> Freedom</h1><p>Freedom is an outbound protocol that can be used to send (normal) TCP or UDP data to any network.</p><h2 id="outboundconfigurationobject" tabindex="-1"><a class="header-anchor" href="#outboundconfigurationobject" aria-hidden="true">#</a> OutboundConfigurationObject</h2><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;domainStrategy&quot;</span><span class="token operator">:</span> <span class="token string">&quot;AsIs&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;redirect&quot;</span><span class="token operator">:</span> <span class="token string">&quot;127.0.0.1:3366&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;userLevel&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;fragment&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;packets&quot;</span><span class="token operator">:</span> <span class="token string">&quot;tlshello&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;length&quot;</span><span class="token operator">:</span> <span class="token string">&quot;100-200&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;interval&quot;</span><span class="token operator">:</span> <span class="token string">&quot;10-20&quot;</span> <span class="token comment">// ms</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><blockquote><p><code>domainStrategy</code>: &quot;AsIs&quot; | &quot;UseIP&quot; | &quot;UseIPv4&quot; | &quot;UseIPv6&quot;</p></blockquote><p>When the destination address is a domain name, configure the corresponding value for Freedom&#39;s behavior:</p>',6),i=s("li",null,[s("code",null,'"AsIs"'),u(": Freedom resolves the domain name using the system DNS server and connects to it.")],-1),d=s("code",null,'"UseIP"',-1),m=u(", "),h=s("code",null,'"UseIPv4"',-1),b=u(", and "),q=s("code",null,'"UseIPv6"',-1),f=u(": Xray resolves the domain name using the built-in "),k=u("DNS server"),g=u(" and connects to it. The default value is "),v=s("code",null,'"AsIs"',-1),y=u("."),I={class:"custom-container tip"},P=s("p",{class:"custom-container-title"},"TIP 1",-1),w=u("When using the "),T=s("code",null,'"UseIP"',-1),U=u(" mode and the "),j=s("code",null,"sendThrough",-1),F=u(" field is specified in the "),x=u("outbound connection configuration"),S=u(", Freedom will automatically determine the required IP type, IPv4 or IPv6, based on the value of "),A=s("code",null,"sendThrough",-1),L=u("."),W=c('<div class="custom-container tip"><p class="custom-container-title">TIP 2</p><p>When using the <code>&quot;UseIPv4&quot;</code> or <code>&quot;UseIPv6&quot;</code> mode, Freedom will only use the corresponding IPv4 or IPv6 address. If <code>sendThrough</code> specifies a mismatched local address, the connection will fail.</p></div><blockquote><p><code>redirect</code>: address_port</p></blockquote><p>Freedom will force all data to be sent to the specified address (instead of the address specified in the inbound).</p><p>It is a string value, for example: <code>&quot;127.0.0.1:80&quot;</code>, <code>&quot;:1234&quot;</code>.</p><p>When the address is not specified, such as <code>&quot;:443&quot;</code>, Freedom will not modify the original destination address. When the port is <code>0</code>, such as <code>&quot;xray.com:0&quot;</code>, Freedom will not modify the original port.</p><blockquote><p><code>userLevel</code>: number</p></blockquote>',6),_=u("User level. The connection will use the corresponding "),C=u("local policy"),D=u(" for this user level."),N=u("The value of "),O=s("code",null,"userLevel",-1),R=u(" corresponds to the value of "),X=s("code",null,"level",-1),z=u(" in the "),B=u("policy"),E=u(". If not specified, the default value is 0."),G=s("blockquote",null,[s("p",null,[s("code",null,"fragment"),u(": map")])],-1),H=s("p",null,"A key-value map used to control TCP fragmentation，under some circumstances it can cheat the censor syetem, like bypass a SNI blacklist.",-1),J=s("p",null,[s("code",null,'"packets"'),u('：support two different methods. "1-3" is for segmentation at TCP layer, applying to the beginning 1 to 3 data writes by the client. "tlshello" is for TLS client hello packet fragmentation.')],-1),K=s("p",null,[s("code",null,'"length"'),u(": length to make the cut")],-1),M=s("p",null,[s("code",null,'"interval"'),u(": time between fragments（ms）")],-1);p.render=function(c,u){const p=e("RouterLink");return n(),o(l,null,[r,s("ul",null,[i,s("li",null,[d,m,h,b,q,f,t(p,{to:"/en/config/dns.html"},{default:a((()=>[k])),_:1}),g,v,y])]),s("div",I,[P,s("p",null,[w,T,U,j,F,t(p,{to:"/en/config/outbound.html#outboundobject"},{default:a((()=>[x])),_:1}),S,A,L])]),W,s("p",null,[_,t(p,{to:"/en/config/policy.html#levelpolicyobject"},{default:a((()=>[C])),_:1}),D]),s("p",null,[N,O,R,X,z,t(p,{to:"/en/config/policy.html#policyobject"},{default:a((()=>[B])),_:1}),E]),G,H,J,K,M],64)};export default p;
