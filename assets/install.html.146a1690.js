import{r as e,o as r,c as a,a as l,b as n,F as t,d as o,e as i}from"./app.3b73604d.js";const h={},s=o('<h1 id="download-and-install" tabindex="-1"><a class="header-anchor" href="#download-and-install" aria-hidden="true">#</a> Download and Install</h1><h2 id="platform-support" tabindex="-1"><a class="header-anchor" href="#platform-support" aria-hidden="true">#</a> Platform Support</h2><ul><li>Xray is available on the following platforms: <ul><li>Windows 7 and later (x86 / amd64 / arm32 / arm64);</li><li>macOS 10.10 Yosemite and later (amd64 / arm64);</li><li>Linux 2.6.23 and later (x86 / amd64 / arm / arm64 / mips64 / mips / ppc64 / s390x / riscv64); <ul><li>Including but not limited to Debian 7 / 8, Ubuntu 12.04 / 14.04 and subsequent versions, CentOS 7 / 8, Arch Linux, etc.;</li></ul></li><li>FreeBSD (x86 / amd64);</li><li>OpenBSD (x86 / amd64);</li><li>Dragonfly BSD (amd64);</li></ul></li></ul><h2 id="download-xray" tabindex="-1"><a class="header-anchor" href="#download-xray" aria-hidden="true">#</a> Download Xray</h2>',4),u=i("Precompiled binaries in ZIP format are available at "),d={href:"https://github.com/xtls/Xray-core/releases",target:"_blank",rel:"noopener noreferrer"},c=i("GitHub Releases"),p=i(" found in."),f=l("p",null,"Download the compressed package of the corresponding platform, and use it after decompression.",-1),b=l("h2",{id:"verify-the-installation-package",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#verify-the-installation-package","aria-hidden":"true"},"#"),i(" Verify the Installation Package")],-1),g=l("p",null,"Xray provides two verification methods:",-1),m=l("li",null,"SHA1/SHA256 digest of the ZIP archive",-1),y=i("Reproducible build: Please refer to "),x={href:"https://xtls.github.io/development/intro/compile.html",target:"_blank",rel:"noopener noreferrer"},k=i("Compile Xray"),w=l("h2",{id:"install-on-windows",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#install-on-windows","aria-hidden":"true"},"#"),i(" Install on Windows")],-1),_=i("Download the ZIP archive suitable for the Windows platform on "),v={href:"https://github.com/xtls/Xray-core/releases",target:"_blank",rel:"noopener noreferrer"},S=i("Github Releases"),X=i(". After decompression, you can get an executable file "),A=l("code",null,"xray.exe",-1),I=i(", and then run it with "),P=l("a",{href:"./command"},"parameters",-1),D=i(" through the command line."),N=i("By "),R={href:"https://scoop.sh/",target:"_blank",rel:"noopener noreferrer"},U=i("Scoop"),L=i(" Package manager installation: Xray has been added to "),O={href:"https://github.com/Qv2ray/mochi",target:"_blank",rel:"noopener noreferrer"},T=i("Mochi"),F=i("."),M=l("h2",{id:"install-on-macos",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#install-on-macos","aria-hidden":"true"},"#"),i(" Install on macOS")],-1),W=i("Download the ZIP archive suitable for the macOS platform on "),j={href:"https://github.com/xtls/Xray-core/releases",target:"_blank",rel:"noopener noreferrer"},C=i("Github Releases"),G=i(". After decompression, you can get an executable file "),Q=l("code",null,"xray",-1),B=i(", and then run it with "),H=l("a",{href:"./command"},"parameters",-1),K=i(" through the command line."),Z=i("By "),V={href:"https://brew.sh/",target:"_blank",rel:"noopener noreferrer"},q=i("Homebrew"),z=i(" Package manager installation: "),E=l("code",null,"brew install xray",-1),J={href:"https://github.com/N4FA/homebrew-xray",target:"_blank",rel:"noopener noreferrer"},Y=i("homebrew-xray"),$=i(": Thanks "),ee={href:"https://github.com/N4FA",target:"_blank",rel:"noopener noreferrer"},re=i("@N4FA"),ae=l("h2",{id:"install-on-linux",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#install-on-linux","aria-hidden":"true"},"#"),i(" Install on Linux")],-1),le=l("h3",{id:"install-script",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#install-script","aria-hidden":"true"},"#"),i(" Install Script")],-1),ne=l("p",null,"Linux Script",-1),te={href:"https://github.com/XTLS/Xray-install",target:"_blank",rel:"noopener noreferrer"},oe=i("Xray-install"),ie=l("p",null,"One Click",-1),he={href:"https://github.com/kirin10000/Xray-script",target:"_blank",rel:"noopener noreferrer"},se=i("Xray-script"),ue={href:"https://github.com/proxysu/ProxySU",target:"_blank",rel:"noopener noreferrer"},de=i("ProxySU"),ce={href:"https://github.com/reeceyng/v2ray-agent",target:"_blank",rel:"noopener noreferrer"},pe=i("Xray-agent"),fe=i(" Thanks "),be={href:"https://github.com/mack-a",target:"_blank",rel:"noopener noreferrer"},ge=i("@mack-a"),me=i(),ye={href:"https://github.com/reeceyng",target:"_blank",rel:"noopener noreferrer"},xe=i("@Reece"),ke=l("p",null,"Magisk",-1),we={href:"https://github.com/CerteKim/Xray4Magisk",target:"_blank",rel:"noopener noreferrer"},_e=i("Xray4Magisk"),ve={href:"https://github.com/E7KMbb/Xray_For_Magisk",target:"_blank",rel:"noopener noreferrer"},Se=i("Xray_For_Magisk"),Xe=l("h3",{id:"arch-linux",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#arch-linux","aria-hidden":"true"},"#"),i(" Arch Linux")],-1),Ae=l("h4",{id:"arch-user-repository",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#arch-user-repository","aria-hidden":"true"},"#"),i(" Arch User Repository")],-1),Ie=i("Need to use "),Pe={href:"https://wiki.archlinux.org/index.php/AUR_helpers",target:"_blank",rel:"noopener noreferrer"},De=i("AUR helpers"),Ne=i(", "),Re={href:"https://github.com/Jguer/yay",target:"_blank",rel:"noopener noreferrer"},Ue=i("yay"),Le=i(" as an example, it can be installed via "),Oe=l("code",null,"yay -S xray",-1),Te=i("."),Fe=l("h4",{id:"arch-linux-cn",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#arch-linux-cn","aria-hidden":"true"},"#"),i(" Arch Linux CN")],-1),Me=i("First add "),We={href:"https://www.archlinuxcn.org/archlinux-cn-repo-and-mirror/",target:"_blank",rel:"noopener noreferrer"},je=i("Arch Linux CN"),Ce=i(" repository, and then use the root user "),Ge=l("code",null,"pacman -S xray",-1),Qe=i("to install."),Be=l("h3",{id:"linuxbrew",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#linuxbrew","aria-hidden":"true"},"#"),i(" Linuxbrew")],-1),He=l("p",null,[i("The Linuxbrew package manager is used in the same way as Homebrew: "),l("code",null,"brew install xray")],-1),Ke={id:"debian",tabindex:"-1"},Ze=l("a",{class:"header-anchor",href:"#debian","aria-hidden":"true"},"#",-1),Ve=i(" Debian "),qe=l("h2",{id:"install-via-docker",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#install-via-docker","aria-hidden":"true"},"#"),i(" Install via Docker")],-1),ze={href:"https://hub.docker.com/r/teddysun/xray",target:"_blank",rel:"noopener noreferrer"},Ee=i("teddysun/xray"),Je=o('<h3 id="the-file-structure-of-the-docker-image" tabindex="-1"><a class="header-anchor" href="#the-file-structure-of-the-docker-image" aria-hidden="true">#</a> The File Structure of the Docker Image</h3><ul><li><code>/etc/xray/config.json</code>: configuration file</li><li><code>/usr/bin/xray</code>: Xray main program</li><li><code>/usr/local/share/xray/geoip.dat</code>: IP data file</li><li><code>/usr/local/share/xray/geosite.dat</code>: domain name data file</li></ul><h1 id="gui-client" tabindex="-1"><a class="header-anchor" href="#gui-client" aria-hidden="true">#</a> GUI Client</h1>',3),Ye=i("OpenWrt "),$e={href:"https://github.com/xiaorouji/openwrt-passwall",target:"_blank",rel:"noopener noreferrer"},er=i("PassWall"),rr={href:"https://github.com/jerrykuku/luci-app-vssr",target:"_blank",rel:"noopener noreferrer"},ar=i("Hello World"),lr={href:"https://github.com/fw876/helloworld",target:"_blank",rel:"noopener noreferrer"},nr=i("ShadowSocksR Plus+"),tr={href:"https://github.com/yichya/luci-app-xray",target:"_blank",rel:"noopener noreferrer"},or=i("luci-app-xray"),ir=i(" ("),hr={href:"https://github.com/yichya/openwrt-xray",target:"_blank",rel:"noopener noreferrer"},sr=i("openwrt-xray"),ur=i(")"),dr=i("Windows "),cr={href:"https://github.com/2dust/v2rayN",target:"_blank",rel:"noopener noreferrer"},pr=i("v2rayN"),fr={href:"https://github.com/Qv2ray/Qv2ray",target:"_blank",rel:"noopener noreferrer"},br=i("Qv2ray"),gr=i(" (This project has been and archived)"),mr={href:"https://github.com/NetchX/Netch",target:"_blank",rel:"noopener noreferrer"},yr=i("Netch (NetFilter & TUN/TAP)"),xr=i(" (This project has been and archived)"),kr=i("Android "),wr={href:"https://github.com/2dust/v2rayNG",target:"_blank",rel:"noopener noreferrer"},_r=i("v2rayNG"),vr={href:"https://github.com/rurirei/Kitsunebi/tree/release_xtls",target:"_blank",rel:"noopener noreferrer"},Sr=i("Kitsunebi"),Xr=i("iOS / macOS (ARM) "),Ar={href:"https://apps.apple.com/app/shadowrocket/id932747118",target:"_blank",rel:"noopener noreferrer"},Ir=i("Shadowrocket"),Pr={href:"https://apps.apple.com/app/stash/id1596063349",target:"_blank",rel:"noopener noreferrer"},Dr=i("Stash"),Nr=i("macOS (X86/ARM) "),Rr={href:"https://github.com/Qv2ray/Qv2ray",target:"_blank",rel:"noopener noreferrer"},Ur=i("Qv2ray"),Lr=i(" (This project has been and archived)"),Or={href:"https://github.com/tzmax/V2RayXS",target:"_blank",rel:"noopener noreferrer"},Tr=i("V2RayXS"),Fr=l("h1",{id:"uuid-generator",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#uuid-generator","aria-hidden":"true"},"#"),i(" UUID Generator")],-1),Mr=i("Third-party UUID generator "),Wr={href:"https://www.uuidgenerator.net",target:"_blank",rel:"noopener noreferrer"},jr=i("uuidgenerator.net");h.render=function(o,i){const h=e("OutboundLink"),Cr=e("Badge");return r(),a(t,null,[s,l("p",null,[u,l("a",d,[c,n(h)]),p]),f,b,g,l("ul",null,[m,l("li",null,[y,l("a",x,[k,n(h)])])]),w,l("ul",null,[l("li",null,[_,l("a",v,[S,n(h)]),X,A,I,P,D]),l("li",null,[N,l("a",R,[U,n(h)]),L,l("a",O,[T,n(h)]),F])]),M,l("ul",null,[l("li",null,[W,l("a",j,[C,n(h)]),G,Q,B,H,K]),l("li",null,[Z,l("a",V,[q,n(h)]),z,E]),l("li",null,[l("a",J,[Y,n(h)]),$,l("a",ee,[re,n(h)])])]),ae,le,l("ul",null,[l("li",null,[ne,l("ul",null,[l("li",null,[l("a",te,[oe,n(h)])])])])]),l("ul",null,[l("li",null,[ie,l("ul",null,[l("li",null,[l("a",he,[se,n(h)])]),l("li",null,[l("a",ue,[de,n(h)])]),l("li",null,[l("a",ce,[pe,n(h)]),fe,l("a",be,[ge,n(h)]),me,l("a",ye,[xe,n(h)])])])]),l("li",null,[ke,l("ul",null,[l("li",null,[l("a",we,[_e,n(h)])]),l("li",null,[l("a",ve,[Se,n(h)])])])])]),Xe,Ae,l("p",null,[Ie,l("a",Pe,[De,n(h)]),Ne,l("a",Re,[Ue,n(h)]),Le,Oe,Te]),Fe,l("p",null,[Me,l("a",We,[je,n(h)]),Ce,Ge,Qe]),Be,He,l("h3",Ke,[Ze,Ve,n(Cr,{text:"WIP",type:"warning"})]),qe,l("ul",null,[l("li",null,[l("a",ze,[Ee,n(h)])])]),Je,l("ul",null,[l("li",null,[Ye,l("ul",null,[l("li",null,[l("a",$e,[er,n(h)])]),l("li",null,[l("a",rr,[ar,n(h)])]),l("li",null,[l("a",lr,[nr,n(h)])]),l("li",null,[l("a",tr,[or,n(h)]),ir,l("a",hr,[sr,n(h)]),ur])])]),l("li",null,[dr,l("ul",null,[l("li",null,[l("a",cr,[pr,n(h)])]),l("li",null,[l("a",fr,[br,n(h)]),gr]),l("li",null,[l("a",mr,[yr,n(h)]),xr])])]),l("li",null,[kr,l("ul",null,[l("li",null,[l("a",wr,[_r,n(h)])]),l("li",null,[l("a",vr,[Sr,n(h)])])])]),l("li",null,[Xr,l("ul",null,[l("li",null,[l("a",Ar,[Ir,n(h)])]),l("li",null,[l("a",Pr,[Dr,n(h)])])])]),l("li",null,[Nr,l("ul",null,[l("li",null,[l("a",Rr,[Ur,n(h)]),Lr]),l("li",null,[l("a",Or,[Tr,n(h)])])])])]),Fr,l("p",null,[Mr,l("a",Wr,[jr,n(h)])])],64)};export default h;
