import{r as n,o as s,c as e,a,b as o,w as t,F as p,e as c,d as r}from"./app.3b73604d.js";const u={},l=a("h1",{id:"socks",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#socks","aria-hidden":"true"},"#"),c(" SOCKS")],-1),i=c("The standard SOCKS protocol implementation is compatible with "),d={href:"http://ftp.icm.edu.pl/packages/socks/socks4/SOCKS4.protocol",target:"_blank",rel:"noopener noreferrer"},b=c("SOCKS 4"),k=c(", SOCKS 4a, and "),h={href:"http://ftp.icm.edu.pl/packages/socks/socks4/SOCKS4.protocol",target:"_blank",rel:"noopener noreferrer"},q=c("SOCKS 5"),m=c("."),f=r('<div class="custom-container danger"><p class="custom-container-title">Danger</p><p>The SOCKS protocol does not provide encryption for transport and is not suitable for transmitting data over public networks.</p></div><p>The use of <code>SOCKS</code> inbound is more meaningful in a local area network or local environment, where it can be used to listen for incoming connections and provide local services to other programs.</p><h2 id="inboundconfigurationobject" tabindex="-1"><a class="header-anchor" href="#inboundconfigurationobject" aria-hidden="true">#</a> InboundConfigurationObject</h2><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;auth&quot;</span><span class="token operator">:</span> <span class="token string">&quot;noauth&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;accounts&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token property">&quot;user&quot;</span><span class="token operator">:</span> <span class="token string">&quot;my-username&quot;</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;pass&quot;</span><span class="token operator">:</span> <span class="token string">&quot;my-password&quot;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;udp&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;ip&quot;</span><span class="token operator">:</span> <span class="token string">&quot;127.0.0.1&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;userLevel&quot;</span><span class="token operator">:</span> <span class="token number">0</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><blockquote><p><code>auth</code>: &quot;noauth&quot; | &quot;password&quot;</p></blockquote><p>The authentication method for the SOCKS protocol, supporting <code>&quot;noauth&quot;</code> for anonymous mode and <code>&quot;password&quot;</code> for username/password authentication.</p><p>The default value is <code>&quot;noauth&quot;</code>.</p><blockquote><p><code>accounts</code>: [ <a href="#accountobject">AccountObject</a> ]</p></blockquote><p>An array where each element represents a user account.</p><p>This option is only valid when <code>auth</code> is set to <code>&quot;password&quot;</code>.</p><p>The default value is an empty array.</p><blockquote><p><code>udp</code>: true | false</p></blockquote><p>Whether to enable UDP protocol support.</p><p>The default value is <code>false</code>.</p><blockquote><p><code>ip</code>: address</p></blockquote><p>When UDP is enabled, Xray needs to know the local IP address.</p><p>The default value is <code>&quot;127.0.0.1&quot;</code>.</p><blockquote><p><code>userLevel</code>: number</p></blockquote>',18),g=c("The user level that the connection will use to determine the corresponding "),v=c("Local Policy"),y=c("."),S=c("The value of "),j=a("code",null,"userLevel",-1),w=c(" corresponds to the value of "),O=a("code",null,"level",-1),T=c(" in the "),C=c("policy"),K=c(". If not specified, the default value is 0."),x=r('<h3 id="accountobject" tabindex="-1"><a class="header-anchor" href="#accountobject" aria-hidden="true">#</a> AccountObject</h3><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;user&quot;</span><span class="token operator">:</span> <span class="token string">&quot;my-username&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;pass&quot;</span><span class="token operator">:</span> <span class="token string">&quot;my-password&quot;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><blockquote><p><code>user</code>: string</p></blockquote><p>The username as a string. Required.</p><blockquote><p><code>pass</code>: string</p></blockquote><p>The password as a string. Required.</p>',6);u.render=function(c,r){const u=n("OutboundLink"),L=n("RouterLink");return s(),e(p,null,[l,a("p",null,[i,a("a",d,[b,o(u)]),k,a("a",h,[q,o(u)]),m]),f,a("p",null,[g,o(L,{to:"/en/config/policy.html#levelpolicyobject"},{default:t((()=>[v])),_:1}),y]),a("p",null,[S,j,w,O,T,o(L,{to:"/en/config/policy.html#policyobject"},{default:t((()=>[C])),_:1}),K]),x],64)};export default u;
