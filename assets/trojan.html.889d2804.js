import{r as n,o as a,c as s,a as e,b as o,w as t,F as p,e as l,d as c}from"./app.141d040a.js";const r={},i=e("h1",{id:"trojan",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#trojan","aria-hidden":"true"},"#"),l(" Trojan")],-1),u=l("The "),d={href:"https://trojan-gfw.github.io/trojan/protocol",target:"_blank",rel:"noopener noreferrer"},b=l("Trojan"),k=l(" protocol."),f=c('<div class="custom-container danger"><p class="custom-container-title">Danger</p><p>Trojan is designed to work with correctly configured encrypted TLS tunnels.</p></div><h2 id="inboundconfigurationobject" tabindex="-1"><a class="header-anchor" href="#inboundconfigurationobject" aria-hidden="true">#</a> InboundConfigurationObject</h2><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;clients&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token property">&quot;password&quot;</span><span class="token operator">:</span> <span class="token string">&quot;password&quot;</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;email&quot;</span><span class="token operator">:</span> <span class="token string">&quot;love@xray.com&quot;</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;level&quot;</span><span class="token operator">:</span> <span class="token number">0</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;fallbacks&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token property">&quot;dest&quot;</span><span class="token operator">:</span> <span class="token number">80</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><blockquote><p><code>clients</code>: [ <a href="#clientobject">ClientObject</a> ]</p></blockquote><p>An array representing a group of users approved by the server.</p><p>Each item in the array is a user <a href="#clientobject">ClientObject</a>.</p>',6),h=e("code",null,"fallbacks",-1),m=l(": [ "),g=l("FallbackObject"),q=l(" ]"),j=l("An array that contains a series of powerful fallback configurations (optional). The specific configuration for "),v=e("code",null,"fallbacks",-1),y=l(" can be found in the "),T=l("FallbackObject"),w=l(" documentation."),O=c('<div class="custom-container tip"><p class="custom-container-title">Tip</p><p>Xray&#39;s Trojan has full support for fallbacks, and the configuration is identical. The conditions triggering fallback are similar to VLESS: first packet length &lt; 58 or the 57th byte is not <code>\\r</code> (because Trojan does not have a protocol version) or authentication failure.</p></div><h3 id="clientobject" tabindex="-1"><a class="header-anchor" href="#clientobject" aria-hidden="true">#</a> ClientObject</h3><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;password&quot;</span><span class="token operator">:</span> <span class="token string">&quot;password&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;email&quot;</span><span class="token operator">:</span> <span class="token string">&quot;love@xray.com&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;level&quot;</span><span class="token operator">:</span> <span class="token number">0</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><blockquote><p><code>password</code>: string</p></blockquote><p>Required. Any string.</p><blockquote><p><code>email</code>: string</p></blockquote><p>Email address. Optional. Used to identify the user.</p><div class="custom-container danger"><p class="custom-container-title">Danger</p><p>If there are multiple <code>ClientObject</code>s, please make sure that the email addresses are not duplicated.</p></div><blockquote><p><code>level</code>: number</p></blockquote>',9),x=l("The user level that the connection will use to determine the corresponding "),C=l("Local Policy"),L=l("."),_=l("The value of "),A=e("code",null,"level",-1),E=l(" corresponds to the value of "),F=e("code",null,"level",-1),I=l(" in the "),S=l("policy"),D=l(". If not specified, the default value is 0.");r.render=function(l,c){const r=n("OutboundLink"),R=n("RouterLink");return a(),s(p,null,[i,e("p",null,[u,e("a",d,[b,o(r)]),k]),f,e("blockquote",null,[e("p",null,[h,m,o(R,{to:"/en/config/features/fallback.html"},{default:t((()=>[g])),_:1}),q])]),e("p",null,[j,v,y,o(R,{to:"/en/config/features/fallback.html#fallbacks-configuration"},{default:t((()=>[T])),_:1}),w]),O,e("p",null,[x,o(R,{to:"/en/config/policy.html#levelpolicyobject"},{default:t((()=>[C])),_:1}),L]),e("p",null,[_,A,E,F,I,o(R,{to:"/en/config/policy.html#policyobject"},{default:t((()=>[S])),_:1}),D])],64)};export default r;
